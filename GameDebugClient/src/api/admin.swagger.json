{
  "x-generator": "NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Rest Adventure - Admin API",
    "version": "0.0.0-alpha.0.120+db229bc913528932523ab1e72dafde19b6f10b1a"
  },
  "servers": [
    {
      "url": "https://localhost:7056"
    }
  ],
  "paths": {
    "/admin/status/ping": {
      "get": {
        "tags": [
          "AdminApiStatus"
        ],
        "summary": "Ping",
        "operationId": "AdminApiStatus_Ping",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/game/content/characters/classes": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Search character classes",
        "operationId": "AdminGameContent_SearchCharacterClasses",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "The page number\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The page size\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultOfCharacterClass"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/content/items": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Search items",
        "operationId": "AdminGameContent_SearchItems",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "The page number\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The page size\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultOfItem"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/content/locations": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Search locations",
        "operationId": "AdminGameContent_SearchLocations",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "The page number\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The page size\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultOfLocation"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/content/jobs": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Search jobs",
        "operationId": "AdminGameContent_SearchJobs",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "The page number\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The page size\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultOfJob"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/content/static-objects": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Search static objects",
        "operationId": "AdminGameContent_SearchHarvestables",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "The page number\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The page size\n            ",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultOfStaticObject"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/settings": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game settings",
        "operationId": "AdminGame_GetGameSettings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/state": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game state",
        "operationId": "AdminGame_GetGameState",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameState"
                }
              }
            }
          }
        }
      }
    },
    "/admin/game/start": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Start simulation",
        "operationId": "AdminGame_StartSimulation",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/game/tick": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Tick now",
        "operationId": "AdminGame_TickNow",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/game/stop": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Stop simulation",
        "operationId": "AdminGame_StopSimulation",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admin/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get players",
        "operationId": "AdminPlayers_GetPlayers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Player"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/players/{userGuid}": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Register player",
        "operationId": "AdminPlayers_RegisterPlayer",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "playerName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get player",
        "operationId": "AdminPlayers_GetPlayer",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          }
        }
      }
    },
    "/admin/players/{userGuid}/refresh": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Refresh player key",
        "operationId": "AdminPlayers_RefreshPlayerKey",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SearchResultOfCharacterClass": {
        "type": "object",
        "description": "Search result\n            ",
        "additionalProperties": false,
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalItemsCount",
          "totalPagesCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The items found by the query\n            ",
            "items": {
              "$ref": "#/components/schemas/CharacterClass"
            }
          },
          "pageNumber": {
            "type": "integer",
            "description": "The page number corresponding to the results that have been selected\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The page size used by the search\n            ",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "The total number of items matching the query\n            ",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "description": "The total number of pages\n            ",
            "format": "int32"
          }
        }
      },
      "CharacterClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacterClassMinimal"
          },
          {
            "type": "object",
            "description": "Character class\n            ",
            "additionalProperties": false,
            "required": [
              "description",
              "levelCaps"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the character class\n            ",
                "minLength": 1
              },
              "levelCaps": {
                "type": "array",
                "description": "The level caps of the character class\n            ",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "CharacterClassMinimal": {
        "type": "object",
        "description": "Character class (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the character class\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the character class\n            ",
            "minLength": 1
          }
        }
      },
      "SearchResultOfItem": {
        "type": "object",
        "description": "Search result\n            ",
        "additionalProperties": false,
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalItemsCount",
          "totalPagesCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The items found by the query\n            ",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "pageNumber": {
            "type": "integer",
            "description": "The page number corresponding to the results that have been selected\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The page size used by the search\n            ",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "The total number of items matching the query\n            ",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "description": "The total number of pages\n            ",
            "format": "int32"
          }
        }
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemMinimal"
          },
          {
            "type": "object",
            "description": "Item\n            ",
            "additionalProperties": false,
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the item\n            ",
                "nullable": true
              }
            }
          }
        ]
      },
      "ItemMinimal": {
        "type": "object",
        "description": "Item (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "weight"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the item\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the item\n            ",
            "minLength": 1
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the item\n            ",
            "format": "int32"
          }
        }
      },
      "SearchResultOfLocation": {
        "type": "object",
        "description": "Search result\n            ",
        "additionalProperties": false,
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalItemsCount",
          "totalPagesCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The items found by the query\n            ",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "pageNumber": {
            "type": "integer",
            "description": "The page number corresponding to the results that have been selected\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The page size used by the search\n            ",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "The total number of items matching the query\n            ",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "description": "The total number of pages\n            ",
            "format": "int32"
          }
        }
      },
      "Location": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LocationMinimal"
          },
          {
            "type": "object",
            "description": "Map location\n            ",
            "additionalProperties": false,
            "required": [
              "discovered",
              "connectedLocations"
            ],
            "properties": {
              "discovered": {
                "type": "boolean",
                "description": "Has this location been discovered by the player.\nIf false, the connected locations will be hidden.\n            "
              },
              "connectedLocations": {
                "type": "array",
                "description": "The locations connected to this one\n            ",
                "items": {
                  "$ref": "#/components/schemas/LocationMinimal"
                }
              }
            }
          }
        ]
      },
      "LocationMinimal": {
        "type": "object",
        "description": "Map location minimal information\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "area",
          "positionX",
          "positionY"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the location\n            ",
            "format": "guid",
            "minLength": 1
          },
          "area": {
            "description": "The area associated with the location\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MapArea"
              }
            ]
          },
          "positionX": {
            "type": "integer",
            "description": "The X coordinate associated with the location\n            ",
            "format": "int32"
          },
          "positionY": {
            "type": "integer",
            "description": "The Y coordinate associated with the location\n            ",
            "format": "int32"
          }
        }
      },
      "MapArea": {
        "type": "object",
        "description": "Map area\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the area\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the area\n            ",
            "minLength": 1
          }
        }
      },
      "SearchResultOfJob": {
        "type": "object",
        "description": "Search result\n            ",
        "additionalProperties": false,
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalItemsCount",
          "totalPagesCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The items found by the query\n            ",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          },
          "pageNumber": {
            "type": "integer",
            "description": "The page number corresponding to the results that have been selected\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The page size used by the search\n            ",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "The total number of items matching the query\n            ",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "description": "The total number of pages\n            ",
            "format": "int32"
          }
        }
      },
      "Job": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobMinimal"
          },
          {
            "type": "object",
            "description": "Job\n            ",
            "additionalProperties": false,
            "required": [
              "innate",
              "levelCaps"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the job\n            ",
                "nullable": true
              },
              "innate": {
                "type": "boolean",
                "description": "Is the job innate?\n            "
              },
              "levelCaps": {
                "type": "array",
                "description": "The experience to reach each level of the job.\n            ",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "JobMinimal": {
        "type": "object",
        "description": "Job (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the job\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the job\n            ",
            "minLength": 1
          }
        }
      },
      "SearchResultOfStaticObject": {
        "type": "object",
        "description": "Search result\n            ",
        "additionalProperties": false,
        "required": [
          "items",
          "pageNumber",
          "pageSize",
          "totalItemsCount",
          "totalPagesCount"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The items found by the query\n            ",
            "items": {
              "$ref": "#/components/schemas/StaticObject"
            }
          },
          "pageNumber": {
            "type": "integer",
            "description": "The page number corresponding to the results that have been selected\n            ",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The page size used by the search\n            ",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "The total number of items matching the query\n            ",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "description": "The total number of pages\n            ",
            "format": "int32"
          }
        }
      },
      "StaticObject": {
        "type": "object",
        "description": "Static object\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the static object\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the static object\n            ",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "The description of the static object\n            ",
            "nullable": true
          }
        }
      },
      "GameSettings": {
        "type": "object",
        "description": "Game settings\n            ",
        "additionalProperties": false,
        "required": [
          "maxTeamSize"
        ],
        "properties": {
          "maxTeamSize": {
            "type": "integer",
            "description": "The max number of characters in a team\n            ",
            "format": "int32"
          }
        }
      },
      "GameState": {
        "type": "object",
        "description": "Game state\n            ",
        "additionalProperties": false,
        "required": [
          "tick",
          "isComputingNextTick",
          "paused"
        ],
        "properties": {
          "tick": {
            "type": "integer",
            "description": "The current game tick\n            ",
            "format": "int64"
          },
          "isComputingNextTick": {
            "type": "boolean",
            "description": "Is the next tick being computed.\nIn that case NextTickDate refers to the old tick's next tick date, which means that it is probably in the past.\n            "
          },
          "paused": {
            "type": "boolean",
            "description": "Is the game paused?\n            "
          },
          "lastTickDate": {
            "type": "string",
            "description": "If the game is started, the date at which last tick has been computed\n            ",
            "format": "date-time",
            "nullable": true
          },
          "nextTickDate": {
            "type": "string",
            "description": "If the game is not paused, the date at which next tick will be computed\n            ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Player": {
        "type": "object",
        "description": "A player\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "apiKey"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the player\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the player\n            ",
            "minLength": 1
          },
          "apiKey": {
            "type": "string",
            "description": "The API key that grants access to the Game API\n            ",
            "format": "guid",
            "minLength": 1
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Game"
    },
    {
      "name": "Players"
    }
  ]
}