{
  "x-generator": "NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Rest Adventure - Game API",
    "version": "0.0.0-alpha.0.63+4948711c7b26c7a6dd720a9cc8db55799dda4fa1"
  },
  "servers": [
    {
      "url": "https://localhost:7056"
    }
  ],
  "paths": {
    "/game/status/ping": {
      "get": {
        "tags": [
          "GameApiStatus"
        ],
        "summary": "Ping",
        "operationId": "GameApiStatus_Ping",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/content/items/{itemId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get item",
        "operationId": "GameContent_GetItem",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/content/locations/{locationId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get location",
        "operationId": "GameContent_GetLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/content/jobs/{jobId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get job",
        "operationId": "GameContent_GetJob",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/content/harvestables/{harvestableId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get harvestable",
        "operationId": "GameContent_GetHarvestable",
        "parameters": [
          {
            "name": "harvestableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Harvestable"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/settings": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game settings",
        "operationId": "Game_GetGameSettings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/state": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game state",
        "operationId": "Game_GetGameState",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameState"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters/{characterGuid}/locations": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get accessible locations",
        "operationId": "TeamCharactersActions_GetAccessibleLocations",
        "parameters": [
          {
            "name": "characterGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationMinimal"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters/{characterGuid}/locations/{locationGuid}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Move to location",
        "operationId": "TeamCharactersActions_MoveToLocation",
        "parameters": [
          {
            "name": "characterGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "locationGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters/{characterGuid}/interactions": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get available interactions",
        "operationId": "TeamCharactersActions_GetAvailableInteractions",
        "parameters": [
          {
            "name": "characterGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityWithInteractions"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters/{characterGuid}/interactions/entity/{entityGuid}/{interactionGuid}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Interact",
        "operationId": "TeamCharactersActions_Interact",
        "parameters": [
          {
            "name": "characterGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "entityGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "interactionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create character",
        "operationId": "TeamCharacters_CreateCharacter",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharacterRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamCharacter"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team/characters/{characterGuid}": {
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete character",
        "operationId": "TeamCharacters_DeleteCharacter",
        "parameters": [
          {
            "name": "characterGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/game/team": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get team",
        "operationId": "Team_GetTeam",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemMinimal"
          },
          {
            "type": "object",
            "description": "Item\n            ",
            "additionalProperties": false,
            "required": [
              "weight"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the item\n            ",
                "nullable": true
              },
              "weight": {
                "type": "integer",
                "description": "The weight of the item\n            ",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ItemMinimal": {
        "type": "object",
        "description": "Item (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the item\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the item\n            ",
            "minLength": 1
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Location": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LocationMinimal"
          },
          {
            "type": "object",
            "description": "Map location\n            ",
            "additionalProperties": false,
            "required": [
              "discovered",
              "connectedLocations"
            ],
            "properties": {
              "discovered": {
                "type": "boolean",
                "description": "Has this location been discovered by the player.\nIf false, the connected locations will be hidden.\n            "
              },
              "connectedLocations": {
                "type": "array",
                "description": "The locations connected to this one\n            ",
                "items": {
                  "$ref": "#/components/schemas/LocationMinimal"
                }
              }
            }
          }
        ]
      },
      "LocationMinimal": {
        "type": "object",
        "description": "Map location minimal information\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "area",
          "positionX",
          "positionY"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the location\n            ",
            "format": "guid",
            "minLength": 1
          },
          "area": {
            "description": "The area associated with the location\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MapArea"
              }
            ]
          },
          "positionX": {
            "type": "integer",
            "description": "The X coordinate associated with the location\n            ",
            "format": "int32"
          },
          "positionY": {
            "type": "integer",
            "description": "The Y coordinate associated with the location\n            ",
            "format": "int32"
          }
        }
      },
      "MapArea": {
        "type": "object",
        "description": "Map area\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the area\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the area\n            ",
            "minLength": 1
          }
        }
      },
      "Job": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobMinimal"
          },
          {
            "type": "object",
            "description": "Job\n            ",
            "additionalProperties": false,
            "required": [
              "innate",
              "levelsExperience"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "The description of the job\n            ",
                "nullable": true
              },
              "innate": {
                "type": "boolean",
                "description": "Is the job innate?\n            "
              },
              "levelsExperience": {
                "type": "array",
                "description": "The experience to reach each level of the job.\n            ",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "JobMinimal": {
        "type": "object",
        "description": "Job (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the job\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the job\n            ",
            "minLength": 1
          }
        }
      },
      "Harvestable": {
        "type": "object",
        "description": "Harvestable\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the harvestable\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the harvestable\n            ",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "The description of the harvestable\n            ",
            "nullable": true
          }
        }
      },
      "GameSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maxTeamSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameState": {
        "type": "object",
        "description": "Game state\n            ",
        "additionalProperties": false,
        "required": [
          "tick",
          "paused",
          "lastTickDate",
          "nextTickDate"
        ],
        "properties": {
          "tick": {
            "type": "integer",
            "description": "The current game tick\n            ",
            "format": "int64"
          },
          "paused": {
            "type": "boolean",
            "description": "Is the game paused?\n            "
          },
          "lastTickDate": {
            "type": "string",
            "description": "If the game is started, the date at which last tick has been computed\n            ",
            "format": "date-time",
            "minLength": 1
          },
          "nextTickDate": {
            "type": "string",
            "description": "If the game is not paused, the date at which next tick will be computed\n            ",
            "format": "date-time",
            "minLength": 1
          }
        }
      },
      "EntityWithInteractions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityMinimal"
          },
          {
            "type": "object",
            "description": "Entity with interactions\n            ",
            "additionalProperties": false,
            "required": [
              "interactions"
            ],
            "properties": {
              "interactions": {
                "type": "array",
                "description": "The interactions that can be performed on the entity\n            ",
                "items": {
                  "$ref": "#/components/schemas/Interaction"
                }
              }
            }
          }
        ]
      },
      "Interaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InteractionMinimal"
          },
          {
            "type": "object",
            "description": "Interaction\n            ",
            "additionalProperties": false,
            "required": [
              "canInteract"
            ],
            "properties": {
              "canInteract": {
                "type": "boolean",
                "description": "Can this interaction be performed\n            "
              }
            }
          }
        ]
      },
      "InteractionMinimal": {
        "type": "object",
        "description": "Interaction (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the interaction\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the interaction\n            ",
            "minLength": 1
          }
        }
      },
      "EntityMinimal": {
        "type": "object",
        "description": "Entity (minimal)\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the entity\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the entity\n            ",
            "minLength": 1
          }
        }
      },
      "TeamCharacter": {
        "type": "object",
        "description": "Character\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "class",
          "location",
          "inventory"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the character\n            ",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the character\n            ",
            "minLength": 1
          },
          "class": {
            "description": "The class of the character\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CharacterClass"
              }
            ]
          },
          "location": {
            "description": "The current location of the character\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationMinimal"
              }
            ]
          },
          "inventory": {
            "description": "The inventory of the character\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Inventory"
              }
            ]
          },
          "lastActionResult": {
            "description": "The result of the action that has been performed on last tick\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CharacterActionResult"
              }
            ]
          },
          "currentInteraction": {
            "description": "The interaction being performed by the character\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InteractionInstance"
              }
            ]
          },
          "plannedAction": {
            "description": "The action that the character has planned for the next tick\n            ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CharacterAction"
              }
            ]
          }
        }
      },
      "CharacterClass": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Knight",
          "Mage",
          "Scout",
          "Dealer"
        ],
        "enum": [
          "knight",
          "mage",
          "scout",
          "dealer"
        ]
      },
      "Inventory": {
        "type": "object",
        "description": "Inventory\n            ",
        "additionalProperties": false,
        "required": [
          "stacks",
          "weight"
        ],
        "properties": {
          "stacks": {
            "type": "array",
            "description": "The entries of the inventory\n            ",
            "items": {
              "$ref": "#/components/schemas/ItemInstanceStack"
            }
          },
          "weight": {
            "type": "integer",
            "description": "The total weight of the items in the inventory\n            ",
            "format": "int32"
          }
        }
      },
      "ItemInstanceStack": {
        "type": "object",
        "description": "Item stack\n            ",
        "additionalProperties": false,
        "required": [
          "itemInstance",
          "count"
        ],
        "properties": {
          "itemInstance": {
            "description": "The item instance representing this stack\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ItemInstance"
              }
            ]
          },
          "count": {
            "type": "integer",
            "description": "The number of instances in this stack\n            ",
            "format": "int32"
          }
        }
      },
      "ItemInstance": {
        "type": "object",
        "description": "Item instance\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "item"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this instance\n            ",
            "format": "guid",
            "minLength": 1
          },
          "item": {
            "description": "The unique ID of the item corresponding to this instance\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ItemMinimal"
              }
            ]
          }
        }
      },
      "CharacterActionResult": {
        "type": "object",
        "description": "The result of an action performed by a character\n            ",
        "additionalProperties": false,
        "required": [
          "tick",
          "action",
          "success"
        ],
        "properties": {
          "tick": {
            "type": "integer",
            "description": "The tick at which the action has been performed\n            ",
            "format": "int64"
          },
          "action": {
            "description": "The action\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CharacterAction"
              }
            ]
          },
          "success": {
            "type": "boolean",
            "description": "Has the action been successful\n            "
          },
          "failureReason": {
            "type": "string",
            "description": "Why the action has failed\n            ",
            "nullable": true
          }
        }
      },
      "CharacterAction": {
        "type": "object",
        "discriminator": {
          "propertyName": "$type",
          "mapping": {
            "move": "#/components/schemas/CharacterMoveToLocationAction",
            "interact": "#/components/schemas/CharacterInteractWithEntityAction"
          }
        },
        "description": "An action performed by a character\n            ",
        "additionalProperties": false,
        "required": [
          "$type"
        ],
        "properties": {
          "$type": {
            "type": "string"
          }
        }
      },
      "CharacterMoveToLocationAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacterAction"
          },
          {
            "type": "object",
            "description": "Character moves to location\n            ",
            "additionalProperties": false,
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "description": "The location to which the character is moving\n            ",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LocationMinimal"
                  }
                ]
              }
            }
          }
        ]
      },
      "CharacterInteractWithEntityAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CharacterAction"
          },
          {
            "type": "object",
            "description": "Character interact with entity\n            ",
            "additionalProperties": false,
            "required": [
              "interaction",
              "entity"
            ],
            "properties": {
              "interaction": {
                "description": "The interaction\n            ",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InteractionMinimal"
                  }
                ]
              },
              "entity": {
                "description": "The subject of the interaction\n            ",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EntityMinimal"
                  }
                ]
              }
            }
          }
        ]
      },
      "InteractionInstance": {
        "type": "object",
        "description": "Interaction instance\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "interaction",
          "subject"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the instance\n            ",
            "format": "guid",
            "minLength": 1
          },
          "interaction": {
            "description": "The interaction associated with the instance\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/InteractionMinimal"
              }
            ]
          },
          "subject": {
            "description": "The subject of the interaction\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntityMinimal"
              }
            ]
          }
        }
      },
      "CreateCharacterRequest": {
        "type": "object",
        "description": "Character creation options\n            ",
        "additionalProperties": false,
        "required": [
          "name",
          "class"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the character\n            ",
            "minLength": 1
          },
          "class": {
            "description": "The class of the character\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CharacterClass"
              }
            ]
          }
        }
      },
      "Team": {
        "type": "object",
        "description": "Team of characters\n            ",
        "additionalProperties": false,
        "required": [
          "characters"
        ],
        "properties": {
          "characters": {
            "type": "array",
            "description": "The characters in the team\n            ",
            "items": {
              "$ref": "#/components/schemas/TeamCharacter"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Game"
    },
    {
      "name": "Team"
    }
  ]
}